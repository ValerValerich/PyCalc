import logg
import time
import ex


def first_displey():
    logg.logging.info("Запуск калькулятора")
    f_ask = input("Приветствую!\n"
                  "Я - калькулятор. Умею работать с рациональными\n"
                  "и комплексными числами. Какие тебя интересуют?\n"
                  "Введи '1', если рациональные или '2', если комплексные.\n"
                  "Введи '3', если передумал считать\n")

    match f_ask:
        case "1":
            print("Будем считать рациональные")
            time.sleep(2.5)
            a = input("Введи первое число\n")
            ch = input("Что будем с ним делать?\n"
                       "* - умножать\n"
                       "/ - делить\n"
                       "+ - складывать\n"
                       "- - вычетать\n"
                       "** - возводить в степень\n"
                       "V - выводить корень\n"
                       "// - целочисленно разделять\n"
                       "% - получать остаток от деления\n")
            b = input("Введи второе число\n")
            op = 'r'
            ex.chech_in(a, b, ch, op)
        case "2":
            print("Будем считать комплексные")
            time.sleep(2.5)
            a = input("Вводим комплексные числа. Первая часть первого числа\n")
            a1 = input("Вторая часть\n")
            ch = input("Что будем с ним делать?\n"
                       "* - умножать\n"
                       "/ - делить\n"
                       "+ - складывать\n"
                       "- - вычетать\n"
                       "** - возводить в степень"
                       "V - выводить корень\n")
            b = input("Первая часть второго числа\n")
            b1 = input("Вторая часть\n")
            op = 'k'
            ex.chech_in(a, b, ch, op, a1, b1)
        case "3":
            print("\n"
                  "\n"
                  "\n"
                  "Еще увидимся!")
            logg.logging.info("Выход из калькулятора")
        case _:
            print("Не понимаю. Попробуем еще раз?\n\n\n")
            time.sleep(2.5)
            first_displey()
